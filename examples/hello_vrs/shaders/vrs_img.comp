#version 450
#extension GL_ARB_separate_shader_objects : enable

#define WORKGROUP_SIZE 16

layout(local_size_x = WORKGROUP_SIZE, local_size_y = WORKGROUP_SIZE) in;

layout(push_constant) uniform PushUniforms
{
    vec2 eyePoint;
	vec2 imgSize;
} pushConst;

layout(set = 0, binding = 0, r8ui) uniform uimage2D targetImage;
layout(set = 1, binding = 0, rgba8) uniform image2D debugImage;

void main() {
	ivec2 uv = ivec2(gl_GlobalInvocationID.xy);
	
	vec2 distVec = (clamp(pushConst.eyePoint, 0, 1) - uv * 1.0 / pushConst.imgSize) * 2.0 / sqrt(2) * 1.08; // * 1.16 * 2 // comment for blit figure
	vec2 distVecInv =  (vec2(1.0) - clamp(pushConst.eyePoint, 0, 1) - uv * 1.0 / pushConst.imgSize) * 2.0 / sqrt(2) * 1.08; // vec2(2.0/sqrt(2)) -  distVec;


	uint shadingRate = int((1.0 - clamp(dot(distVec,distVec),0,1))*(1.0 - clamp(dot(distVec,distVec),0,1)) * 11.0);

	// comment for blit figure
	//if (uv.x == 1600/16 || uv.y == 900/16 ||
	//((uv.x == 1600/16/2 || uv.x == 1600/16 * 3/2) && uv.y >= 900/16/2 && uv.y <= 900/16 * 3/2) ||
	//((uv.y == 900/16/2 || uv.y == 900/16 * 3/2) && uv.x >= 1600/16/2 && uv.x <= 1600/16 * 3/2)) {
	//	shadingRate = 11;
	//}

	imageStore(targetImage, uv, uvec4(shadingRate,0,0,0));
	
	float shadingRateF = shadingRate / 12.0;
	imageStore(debugImage, uv, vec4(shadingRateF));
	//imageStore(debugImage, uv, vec4( int((sqrt(2) - distance(pushConst.eyePoint,distVec))/sqrt(2)*12)/12.0 ));
	//imageStore(debugImage, uv, vec4( int((1.0 - clamp(dot(distVec,distVec),0,1))*(1.0 - clamp(dot(distVec,distVec),0,1)) * 12.0)/12.0 ));
	//imageStore(debugImage, uv, vec4( int((1.0 - clamp(dot(distVecInv,distVecInv),0,1))*(1.0 - clamp(dot(distVecInv,distVecInv),0,1)) * 11.0) / 11.0 ));
}